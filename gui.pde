/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:892540:
  appc.background(230);
} //_CODE_:window1:892540:

public void blenderflow_click1(GButton source, GEvent event) { //_CODE_:blenderflow:503144:
  mode = 0;
  println(mode);
} //_CODE_:blenderflow:503144:

public void colour_click1(GDropList source, GEvent event) { //_CODE_:colour:699004:
  int index = colour.getSelectedIndex();
  sub.setcolour();
} //_CODE_:colour:699004:

public void faucetflow_click1(GButton source, GEvent event) { //_CODE_:faucetflow:471213:
  mode = 2;
  println(mode);
} //_CODE_:faucetflow:471213:

public void smokeflow_click1(GButton source, GEvent event) { //_CODE_:smokeflow:424107:
  mode = 1;
  println(mode);
} //_CODE_:smokeflow:424107:

public void blendpulse_click1(GButton source, GEvent event) { //_CODE_:blendpulse:501197:
  if (mode == 0){
    float timestart = millis();
    
    while (millis() < timestart + 500){
      ispulsed = true;
    }
   ispulsed = false;
  }
} //_CODE_:blendpulse:501197:

public void pause_click1(GButton source, GEvent event) { //_CODE_:pause:791977:
  isstopped = !isstopped;
  
} //_CODE_:pause:791977:

public void blow_click1(GButton source, GEvent event) { //_CODE_:blow:685921:
  println("blow - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:blow:685921:

public void temp_click1(GButton source, GEvent event) { //_CODE_:temp:351183:
  hot = !hot;
} //_CODE_:temp:351183:

public void laminaenum_change1(GCustomSlider source, GEvent event) { //_CODE_:laminaenum1:637006:
  println("laminaenum1 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:laminaenum1:637006:

public void vscoslider_change1(GCustomSlider source, GEvent event) { //_CODE_:vsco:528915:
  int v = vsco.getValueI();
  println(v);
} //_CODE_:vsco:528915:

public void speedslider_change1(GCustomSlider source, GEvent event) { //_CODE_:speed:592926:
  int s = speed.getValueI();
  println(s);
} //_CODE_:speed:592926:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("FlowSim Controls");
  window1 = GWindow.getWindow(this, "FlowSim Controls", 0, 0, 530, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  blenderflow = new GButton(window1, 170, 40, 80, 30);
  blenderflow.setText("Blender Flow");
  blenderflow.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  blenderflow.addEventHandler(this, "blenderflow_click1");
  colour = new GDropList(window1, 40, 40, 90, 240, 7, 10);
  colour.setItems(loadStrings("list_699004"), 0);
  colour.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  colour.addEventHandler(this, "colour_click1");
  faucetflow = new GButton(window1, 410, 40, 80, 30);
  faucetflow.setText("Faucet Flow");
  faucetflow.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  faucetflow.addEventHandler(this, "faucetflow_click1");
  smokeflow = new GButton(window1, 290, 40, 80, 30);
  smokeflow.setText("Smoke Flow");
  smokeflow.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  smokeflow.addEventHandler(this, "smokeflow_click1");
  blendpulse = new GButton(window1, 180, 100, 60, 30);
  blendpulse.setText("Pulse");
  blendpulse.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  blendpulse.addEventHandler(this, "blendpulse_click1");
  pause = new GButton(window1, 40, 100, 90, 30);
  pause.setText("Pause");
  pause.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  pause.addEventHandler(this, "pause_click1");
  blow = new GButton(window1, 300, 100, 60, 30);
  blow.setText("Blow");
  blow.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  blow.addEventHandler(this, "blow_click1");
  temp = new GButton(window1, 420, 100, 60, 30);
  temp.setText("Change to Hot");
  temp.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  temp.addEventHandler(this, "temp_click1");
  label1 = new GLabel(window1, 40, 0, 90, 40);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("General Controls");
  label1.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label1.setOpaque(false);
  lol = new GLabel(window1, 290, 10, 80, 20);
  lol.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lol.setText(" Modes");
  lol.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  lol.setOpaque(false);
  laminaenum1 = new GCustomSlider(window1, 40, 180, 90, 50, "purple18px");
  laminaenum1.setShowValue(true);
  laminaenum1.setShowLimits(true);
  laminaenum1.setLimits(5, 1, 10);
  laminaenum1.setNbrTicks(10);
  laminaenum1.setStickToTicks(true);
  laminaenum1.setShowTicks(true);
  laminaenum1.setNumberFormat(G4P.INTEGER, 0);
  laminaenum1.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  laminaenum1.setOpaque(false);
  laminaenum1.addEventHandler(this, "laminaenum_change1");
  label2 = new GLabel(window1, 40, 150, 90, 30);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Number of Laminae");
  label2.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label2.setOpaque(false);
  vsco = new GCustomSlider(window1, 170, 160, 320, 50, "purple18px");
  vsco.setShowValue(true);
  vsco.setShowLimits(true);
  vsco.setLimits(10, 0, 20);
  vsco.setNbrTicks(21);
  vsco.setStickToTicks(true);
  vsco.setShowTicks(true);
  vsco.setNumberFormat(G4P.INTEGER, 0);
  vsco.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  vsco.setOpaque(false);
  vsco.addEventHandler(this, "vscoslider_change1");
  speed = new GCustomSlider(window1, 170, 230, 320, 50, "purple18px");
  speed.setShowValue(true);
  speed.setShowLimits(true);
  speed.setLimits(5, 0, 10);
  speed.setNbrTicks(11);
  speed.setStickToTicks(true);
  speed.setShowTicks(true);
  speed.setNumberFormat(G4P.INTEGER, 0);
  speed.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  speed.setOpaque(false);
  speed.addEventHandler(this, "speedslider_change1");
  label3 = new GLabel(window1, 210, 140, 240, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Viscosity of Substance");
  label3.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label3.setOpaque(false);
  label4 = new GLabel(window1, 260, 210, 142, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Speed of Flow");
  label4.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label4.setOpaque(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton blenderflow; 
GDropList colour; 
GButton faucetflow; 
GButton smokeflow; 
GButton blendpulse; 
GButton pause; 
GButton blow; 
GButton temp; 
GLabel label1; 
GLabel lol; 
GCustomSlider laminaenum1; 
GLabel label2; 
GCustomSlider vsco; 
GCustomSlider speed; 
GLabel label3; 
GLabel label4; 
